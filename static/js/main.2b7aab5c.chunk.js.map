{"version":3,"sources":["components/Header.js","containers/TimeForm.js","components/TimingList.js","containers/App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","Component","TimeForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","setState","defineProperty","target","name","value","handleFoodChange","idx","evt","console","log","newFood","state","foodList","map","details","sidx","objectSpread","food","handleFoodTimeChange","time","handleAddFood","concat","ovenTime","cleanFoodList","filter","f","sort","b","reverse","getEndTime","endTime","split","now","Date","getFullYear","getMonth","getDate","setOventimes","foodDetailsOrder","x","length","startdate","durationInMinutes","setMinutes","getMinutes","saveFinalTimings","timings","calculateTimesDynamic","toggleForm","updateTimings","setInitialFoodList","updatedFoodList","push","i","bind","assertThisInitialized","_this2","dist_default","key","width","gap","type","placeholder","onChange","min","onClick","src","alt","htmlFor","id","TimingList","late","checkLate","timingsrows","getHours","slice","App","restart","window","location","reload","showForm","goBack","components_Header","containers_TimeForm","listLength","components_TimingList","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","src_containers_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.2b7aab5c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nimport \"../containers/App.css\";\n\nclass Header extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"Header\">\n\t\t\t\t<h1>Awesome Food Timing Solver</h1>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport Grid from \"react-css-grid\";\n// import TimeFields from '../components/TimeFields'\nimport \"./App.css\";\n\nclass TimeForm extends Component {\n  constructor(props) {\n    super(props);\n    // const listLength = 5\n    // console.log(this.props.timings)\n    this.state = {\n      foodList: [],\n      endTime: \"17:00\",\n      timings: []\n    };\n    this.handleFoodChange = this.handleFoodChange.bind(this);\n    this.handleFoodTimeChange = this.handleFoodTimeChange.bind(this);\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleFoodChange = idx => evt => {\n    console.log(idx);\n    const newFood = this.state.foodList.map((details, sidx) => {\n      if (idx !== sidx) return details;\n      return { ...details, food: evt.target.value };\n    });\n\n    this.setState({ foodList: newFood });\n  };\n\n  handleFoodTimeChange = idx => evt => {\n    const newFood = this.state.foodList.map((details, sidx) => {\n      if (idx !== sidx) return details;\n      return { ...details, time: evt.target.value };\n    });\n\n    this.setState({ foodList: newFood });\n  };\n\n  handleAddFood = () => {\n    this.setState({\n      foodList: this.state.foodList.concat([\n        { food: \"\", time: \"\", ovenTime: \"\" }\n      ])\n    });\n  };\n\n  cleanFoodList = () => {\n    var foods = this.state.foodList.filter(f => f.food !== \"\");\n    // console.log(foods)\n    var foodDetailsOrder = foods.sort(function(a, b) {\n      return a.time - b.time;\n    });\n\n    return foodDetailsOrder.reverse();\n  };\n\n  getEndTime = () => {\n    var time = this.state.endTime.split(\":\");\n\n    const now = new Date();\n    const end = new Date(\n      now.getFullYear(),\n      now.getMonth(),\n      now.getDate(),\n      time[0],\n      time[1]\n    );\n    return end;\n  };\n\n  setOventimes = (foodDetailsOrder, endTime) => {\n    for (var x = 0; x < foodDetailsOrder.length; ++x) {\n      var startdate = new Date(endTime);\n\n      var durationInMinutes = foodDetailsOrder[x].time;\n\n      startdate.setMinutes(endTime.getMinutes() - durationInMinutes);\n      foodDetailsOrder[x].ovenTime = startdate;\n      // console.log(foodDetailsOrder[x].food, startdate)\n    }\n    return foodDetailsOrder;\n  };\n\n  saveFinalTimings = foodDetailsOrder => {\n    this.setState({\n      timings: foodDetailsOrder,\n      foodList: foodDetailsOrder\n    });\n  };\n\n  calculateTimesDynamic = () => {\n    var foodDetailsOrder = this.cleanFoodList();\n    var endTime = this.getEndTime();\n\n    this.setOventimes(foodDetailsOrder, endTime);\n    this.saveFinalTimings(foodDetailsOrder);\n    this.props.toggleForm();\n    this.props.updateTimings(foodDetailsOrder);\n  };\n\n  setInitialFoodList = () => {\n    var updatedFoodList = [];\n    if (this.props.timings.length === 0) {\n      for (var a = 0; a < 5; ++a) {\n        updatedFoodList.push({ food: \"\", time: \"\", ovenTime: \"\" });\n      }\n    }\n\n    for (var i = 0; i < this.props.timings.length; ++i) {\n      updatedFoodList.push(this.props.timings[i]);\n    }\n\n    this.setState({\n      foodList: updatedFoodList\n    });\n  };\n\n  componentDidMount() {\n    this.setInitialFoodList();\n  }\n\n  render() {\n    // console.log(this.state.foodList)\n\n    return (\n      <div className=\"TimeForm\">\n        {/*<div id=\"mainContent\" className=\"container\" >*/}\n        <h3>Add foods and cooking time</h3>\n\n        {this.state.foodList.map((details, idx) => (\n          // <TimeFields idx={idx} foodList={this.state.foodList} handleFoodTimeChange={this.handleFoodTimeChange} handleFoodChange={this.handleFoodChange} />\n          <Grid key={idx} width={24} gap={24}>\n            <div className=\"leftStyle\">\n              <input\n                type=\"text\"\n                placeholder={`What food?`}\n                value={details.food}\n                onChange={this.handleFoodChange(idx)}\n              />\n            </div>\n            <div className=\"rightStyle\">\n              <input\n                type=\"number\"\n                placeholder={`minutes to cook`}\n                value={details.time}\n                min=\"0\"\n                onChange={this.handleFoodTimeChange(idx)}\n              />\n              {idx === this.state.foodList.length - 1 && (\n                <button className=\"addButton\" onClick={this.handleAddFood}>\n                  <img src=\"/plus-1270001_640.png\" width=\"13px\" alt=\"Add\"/>\n\t\t\t\t\t\t\t\t\tAdd{/**/}\n\t\t\t\t\t\t\t\t</button>\n              )}\n            </div>\n          </Grid>\n        ))}\n        <div>\n          <label htmlFor=\"endTime\">Time to finish?</label>\n          <input\n            type=\"time\"\n            name=\"endTime\"\n            id=\"endTime\"\n            className=\"timefield\"\n            onChange={this.handleChange}\n          />\n        </div>\n\n        <button onClick={this.calculateTimesDynamic}>Go</button>\n      </div>\n    );\n  }\n}\n\nexport default TimeForm;\n","import React, { Component } from 'react';\n// import logo from './logo.svg';\n\n\nimport '../containers/App.css';\n\nclass TimingList extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props)\n\n\t\tthis.state = {\n\t\t\ttimings:this.props.timings,\n\t\t\tlate: false\n\t\t}\n\n\t\t// this.updateTimings = this.updateTimings.bind(this);\n\t}\n\n\tcheckLate() {\n\t\tvar now = new Date()\n\t\tif(this.state.timings[0].ovenTime < now) {\n\t\t\t// console.log(\"too late\")\n\t\t\tthis.setState({\n\t\t\t\tlate: true\n\t\t\t})\n\t\t\t// return \"Too late to cook this\"\n\t\t}\n\t}\n\n\tcomponentDidMount(){\n\t\tthis.checkLate()\n\t}\n\n\trender() {\n\n\t\tvar timingsrows = []\n\t\t// console.log(this.state.timings)\n\t\tfor (var a = 0; a < this.state.timings.length; a++) {\n\t\t\t// console.log(this.state.timings[a])\n\t\t\ttimingsrows.push( <div key={a}><b>{this.state.timings[a].food}</b> start cooking @ <b>{('0' + (this.state.timings[a].ovenTime.getHours())).slice(-2)}:{('0' + (this.state.timings[a].ovenTime.getMinutes())).slice(-2)}</b></div>);\n\t\t}\n\n\t\treturn (\n\n\t\t\t<div className=\"timingList\">\n\t\t\t\t{this.state.late && <h2 className=\"late\">Too late - better eat later or have something else</h2>}\n\t\t\t\t{timingsrows}\n\t\t\t</div>\n\n\t\t);\n\t}\n}\n\nexport default TimingList;\n","import React, { Component } from \"react\";\n// import logo from './logo.svg';\nimport Header from \"../components/Header\";\nimport TimeForm from \"./TimeForm\";\nimport TimingList from \"../components/TimingList\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      timings: [],\n      showForm: true\n    };\n\n    this.updateTimings = this.updateTimings.bind(this);\n    this.toggleForm = this.toggleForm.bind(this);\n  }\n\n  updateTimings = (timings) => {\n    this.setState({\n      timings: timings\n    });\n  };\n\n  restart = () => {\n    window.location.reload();\n  };\n\n  toggleForm = () => {\n    this.setState({\n      showForm: !this.state.showForm\n    });\n  };\n\n  goBack = () => {\n    this.toggleForm();\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        {this.state.showForm && (\n          <TimeForm\n            timings={this.state.timings}\n            updateTimings={this.updateTimings}\n            toggleForm={this.toggleForm}\n            listLength={this.listLength}\n          />\n        )}\n        {!this.state.showForm && <TimingList timings={this.state.timings} />}\n        {!this.state.showForm && (\n          <div>\n            <button onClick={this.goBack}>Back</button>\n          </div>\n        )}\n        {!this.state.showForm && (\n          <div>\n            <button onClick={this.restart}>Start again</button>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\nserviceWorker.register()\n"],"sourceRoot":""}